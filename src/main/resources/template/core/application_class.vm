package ${PackageId};

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.core.env.Environment;

/**
 * This is the entry point of the application to be started.
 * It can be directly run using jar file with <code>java -jar [fileName].jar </code>
 *
 * Or if the application has multiple profiles,
 *  <code>java -jar -Dspring.profiles.active=[profileName] [fileName].jar</code>
 */

@SpringBootApplication
public class ${ApplicationName}  {


    private static final Logger log = LoggerFactory.getLogger(${ApplicationName}.class);

    public static void main(String[] args) {
        SpringApplication app = new SpringApplication(${ApplicationName}.class);
        Environment env = app.run(args).getEnvironment();
        logApplicationStartup(env);
    }

    /**
     * This method is for logging the basic detail of the application when service is started up
     * @param env current context of running application
     *
     */
    private static void logApplicationStartup(Environment env) {
        String protocol = "http";

        String serverPort = env.getProperty("local.server.port");
        String contextPath = env.getProperty("server.servlet.context-path");
        if (null == contextPath || contextPath.isEmpty()){
             contextPath = "/";
        }
        log.info("\n----------------------------------------------------------\n\t" +
                        "Application '{}' is running! Access URLs:\n\t" +
                        "Local: \t\t{}://localhost:{}{}\n\t" +
                        "Profile(s): \t{}\n----------------------------------------------------------",
                env.getProperty("spring.application.name"),
                protocol,
                serverPort,
                contextPath,
                env.getActiveProfiles());
    }

}
