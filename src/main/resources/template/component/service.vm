package ${PackageId}.application.service;

import ${PackageId}.domain.${ResourceAllSmallCase}.*;

import java.util.List;
import org.springframework.data.domain.Page;

public interface ${ResourceSingular}Service {

    List<${ResourceSingular}> save${ResourcePlural}(List<${ResourceSingular}> ${ResourceSmallCase}List);

    List<${ResourceSingular}> update${ResourcePlural}(List<${ResourceSingular}> ${ResourceSmallCase}List);

    String delete${ResourcePlural}(String[] ${ResourceSmallCase}Ids);

    List<${ResourceSingular}> getAll${ResourcePlural}();

    List<${ResourceSingular}> get${ResourcePlural}(String[] ${ResourceSmallCase}Ids);

    Page<${ResourceSingular}> getAll${ResourcePlural}PageAble(Integer pageIndex, Integer pageSize, String direction, String[] fields,
                                                                            String criteria,String[] projectedAttributes);

#foreach ($subDomain in  ${SubDomainList})
    #set( $subDomainName = ${AttributeHelper.getSubDomainName($subDomain)} )
    #set( $subDomainResourceName  = ${AttributeHelper.getResourceNameSubDomainSingular($subDomainName)})

    ${ResourceSingular} save${ResourceSingular}$subDomainName(String ${ResourceSmallCase}Id, $subDomainName $subDomainResourceName);

    ${ResourceSingular} update${ResourceSingular}$subDomainName(String ${ResourceSmallCase}Id, $subDomainName $subDomainResourceName);

    String delete${ResourceSingular}$subDomainName(String ${ResourceSmallCase}Id, String ${subDomainResourceName}Id);

#end

}